# Generated by Django 2.0.9 on 2019-03-07 23:49

import app_marketplace.models
import cozmo.storages
from django.db import migrations, models
import django.db.models.deletion
import rental_integrations.airbnb.models
import rental_integrations.booking.models
import rental_integrations.homeaway.models
import rental_integrations.trip_advisor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AirbnbApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('user_id', models.TextField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(help_text='Preferably a logo', upload_to=cozmo.storages.UploadImageTo('app_marketplace'))),
                ('description', models.TextField()),
                ('backend_app', models.SmallIntegerField(choices=[(1, app_marketplace.models.GoogleApp), (0, app_marketplace.models.SlackApp), (2, app_marketplace.models.StripeApp), (3, app_marketplace.models.MailChimpApp), (5, rental_integrations.booking.models.BookingAccount), (6, rental_integrations.homeaway.models.HomeAwayAccount), (7, rental_integrations.trip_advisor.models.TripAdvisorAccount), (4, rental_integrations.airbnb.models.AirbnbAccount)], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoogleApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=150)),
                ('credentials', models.TextField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='MailChimpApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='SlackApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('team_name', models.CharField(max_length=150)),
                ('team_id', models.CharField(max_length=150)),
                ('url', models.URLField()),
                ('channel', models.CharField(max_length=150)),
                ('configuration_url', models.URLField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='StripeApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('stripe_publishable_key', models.TextField()),
                ('stripe_user_id', models.CharField(max_length=150)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.AddField(
            model_name='app',
            name='tags',
            field=models.ManyToManyField(to='app_marketplace.Tag'),
        ),
    ]
